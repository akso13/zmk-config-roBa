#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        UP_ARROWc {
            bindings = <&kp UP_ARROW>;
            key-positions = <19 12>;
        };

        DOWN_ARROWc {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <24 31>;
        };

        LEFT_ARROWx {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <18 11>;
        };

        RIGHT_ARROWc {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <20 13>;
        };

        wintab {
            bindings = <&kp LG(TAB)>;
            key-positions = <7 2>;
        };
    };

    macros {
        double0: double0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0 &kp NUMBER_0>;
            label = "DOUBLE0";
        };

        under_score: under_score {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp U &kp N &kp S &kp C &kp SPACE &kp ENTER>;
            label = "UNDER_SCORE";
        };

        back_s: back_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp B &kp A &kp C &kp K &kp S &kp SPACE &kp RET>;
            label = "BACK_S";
        };

        pipe: pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp P &kp I &kp P &kp E &kp SPACE &kp RET>;
            label = "PIPE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W      &kp E         &kp R           &kp T                                    &kp Y             &kp U  &kp I      &kp O    &kp P
&mt LEFT_ALT A  &kp S      &kp D         &kp F           &kp G    &kp TAB          &kp MINUS      &kp H             &kp J  &kp K      &kp L    &mt LEFT_CONTROL ENTER
&kp Z           &kp X      &kp C         &kp V           &kp B    &kp LS(TAB)      &kp BACKSPACE  &kp N             &kp M  &kp COMMA  &kp DOT  &kp LSHIFT
&kp LEFT_ALT    &kp LCTRL  &kp LEFT_GUI  &lt 5 LEFT_GUI  &lt 1 B  &lt 4 SPACE      &lt 3 LANG1    &lt 2 LANGUAGE_2                             &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp QUESTION      &kp AT_SIGN     &kp EXCLAMATION  &under_score     &kp PLUS                                  &under_score  &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH      &kp F4         &pipe
&kp LEFT_BRACKET  &kp AMPERSAND   &kp DOLLAR       &trans           &kp LEFT_BRACE  &trans         &kp MINUS  &kp HASH      &kp ASTERISK       &kp LS(LEFT_PARENTHESIS)  &kp SEMICOLON  &kp SINGLE_QUOTE
&trans            &kp LEFT_ARROW  &kp EQUAL        &kp RIGHT_ARROW  &back_s         &trans         &trans     &kp CARET     &kp RIGHT_BRACE    &kp LS(BACKSLASH)         &kp LESS_THAN  &kp GREATER_THAN
&trans            &trans          &trans           &kp LC(X)        &kp LC(C)       &kp LC(V)      &kp LC(Z)  &kp LC(Y)                                                                 &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS                                       &kp F1   &kp F2   &kp F3   &kp F4         &kp F5
&kp PERCENT                 &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp COLON        &kp DOUBLE_QUOTES      &trans  &kp F6   &kp F7   &kp F8   &kp F9         &kp F10
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp UNDER        &kp SLASH              &trans  &kp F11  &kp F12  &kp F13  &kp LESS_THAN  &kp GREATER_THAN
&trans                      &trans           &trans           &kp F10          &kp KP_NUMBER_0  &double0               &trans  &trans                                    &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans       &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp UP_ARROW    &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LG(TAB)  &trans  &trans  &kp LCTRL
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &kp DOWN_ARROW  &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans       &trans  &trans  &kp LEFT_SHIFT
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                               &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans    &trans  &trans    &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &mkp MB2  &mo 5   &mkp MB1  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans    &trans  &trans    &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans    &trans  &trans    &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans     &kp LS(LG(T))                             &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans         &trans         &kp DELETE  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans         &trans         &trans      &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LC(X)  &kp LC(C)      &kp LC(V)      &kp LC(X)   &kp LC(Y)                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp LG(NUMBER_7)  &kp LG(NUMBER_8)  &kp LG(NUMBER_9)  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &kp LG(NUMBER_6)  &trans  &trans      &trans       &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &trans            &trans            &trans            &trans  &trans      &trans       &trans                                                  &trans
            >;
        };
    };
};
