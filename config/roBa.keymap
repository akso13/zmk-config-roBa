#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define JPYEN 0x89
#define JPUNSC LS(0x87)
#define JPPIPE LS(0x89)
#define ZMK_MOUSE_POINTING_SCRL_VAL 100

/ {
    combos {
        compatible = "zmk,combos";

        UP_ARROWc {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 7>;
        };

        DOWN_ARROWc {
            bindings = <&kp TAB>;
            key-positions = <12 19>;
        };

        wintab {
            bindings = <&kp LG(TAB)>;
            key-positions = <10 21>;
        };

        layer2 {
            bindings = <&mo 7>;
            key-positions = <3 13>;
        };

        layer3 {
            bindings = <&mo 8>;
            key-positions = <13 12>;
        };

        layer6 {
            bindings = <&mo 2>;
            key-positions = <8 20>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <39 18>;
        };

        screens {
            bindings = <&kp LG(LS(S))>;
            key-positions = <38 40>;
        };

        lang1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <38 18>;
        };

        layer9 {
            bindings = <&mo 9>;
            key-positions = <40 39>;
        };
    };

    macros {
        double0: double0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_0 &kp NUMBER_0>;
            label = "DOUBLE0";
        };

        under_score: under_score {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp U &kp N &kp S &kp C &kp SPACE &kp ENTER &kp LANGUAGE_2>;
            label = "UNDER_SCORE";
        };

        back_s: back_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp B &kp A &kp C &kp K &kp S &kp SPACE &kp RET &kp LANGUAGE_2>;
            label = "BACK_S";
        };

        pipe: pipe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp P &kp I &kp P &kp E &kp SPACE &kp RET &kp LANGUAGE_2>;
            label = "PIPE";
        };

        underscorejp: underscorejp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp U &kp N &kp S &kp C &kp SPACE &kp ENTER>;
            label = "UNDERSCOREJP";
        };

        backsjp: backsjp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp B &kp A &kp C &kp K &kp S &kp SPACE &kp RET>;
            label = "BACKSJP";
        };

        pipejp: pipejp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG1 &kp P &kp I &kp P &kp E &kp SPACE &kp RET &kp LANGUAGE_2>;
            label = "PIPEJP";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NEW_BEHAVIOR";
            #sensor-binding-cells = <0>;
            bindings = <&kp UP_ARROW>, <&kp DOWN_ARROW>;

            tap-ms = <1>;
        };

        new_behavior2: new_behavior2 {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NEW_BEHAVIOR2";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <200>;
        };

        new_behavior3: new_behavior3 {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NEW_BEHAVIOR3";
            #sensor-binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp RIGHT>;

            tap-ms = <1>;
        };

        new_behavior4: new_behavior4 {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NEW_BEHAVIOR4";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E            &kp R      &kp T                                              &kp Y      &kp U    &kp I      &kp O    &kp P
&kp A         &lt 5 S       &kp D            &lt 4 F    &kp G           &mkp MB3           &kp LANGUAGE_2  &kp H      &lt 3 J  &kp K      &lt 6 L  &mt LEFT_CONTROL MINUS
&kp Z         &kp X         &kp C            &kp V      &kp B           &kp DELETE         &kp LANGUAGE_1  &kp N      &kp M    &kp COMMA  &kp DOT  &kp LEFT_ALT
&kp LEFT_WIN  &kp QUESTION  &kp EXCLAMATION  &kp LCTRL  &kp LEFT_SHIFT  &kp BACKSPACE      &lt 1 SPACE     &kp ENTER                               &mo 4
            >;

            sensor-bindings = <&new_behavior4>;
        };

        kigou {
            bindings = <
&kp QUESTION      &kp AT_SIGN     &kp EXCLAMATION  &kp JPUNSC       &kp PLUS                                   &under_score  &kp RIGHT_BRACKET  &kp BACKSLASH      &none          &kp JPPIPE
&kp LEFT_BRACKET  &kp AMPERSAND   &kp DOLLAR       &trans           &kp LEFT_BRACE  &trans         &kp MINUS   &kp HASH      &kp ASTERISK       &kp LS(N9)         &kp SEMICOLON  &kp SINGLE_QUOTE
&trans            &kp LEFT_ARROW  &kp EQUAL        &kp RIGHT_ARROW  &kp JPYEN       &kp JPYEN      &kp JPUNSC  &kp CARET     &kp RIGHT_BRACE    &kp LS(BACKSLASH)  &kp LESS_THAN  &kp GREATER_THAN
&trans            &trans          &trans           &kp F10          &trans          &trans         &trans      &trans                                                             &none
            >;

            sensor-bindings = <&inc_dec_kp LS(TAB) TAB>;
        };

        winnum {
            bindings = <
&trans  &kp LG(NUMBER_7)  &kp LG(NUMBER_8)  &kp LG(NUMBER_9)  &trans                               &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &kp LG(NUMBER_6)  &trans  &trans      &trans           &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans  &trans      &kp RA(LC(DEL))  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans            &trans            &trans  &trans      &trans           &trans                          &trans
            >;

            sensor-bindings = <&new_behavior>;
        };

        ARROW {
            bindings = <
&kp LC(W)       &kp LC(LS(TAB))     &kp UP_ARROW        &kp LC(TAB)          &kp LC(T)                          &trans    &trans       &kp LC(X)  &kp LC(Z)  &kp LA(F4)
&kp HOME        &kp LEFT_ARROW      &kp DOWN_ARROW      &kp RIGHT_ARROW      &kp END    &mkp MB3      &trans    &trans    &kp LG(TAB)  &kp LC(C)  &kp LC(V)  &kp LCTRL
&kp LEFT_SHIFT  &kp LG(LEFT_ARROW)  &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)  &trans     &trans        &trans    &trans    &trans       &trans     &kp LC(Y)  &kp LEFT_ALT
&trans          &trans              &kp LG(DOWN_ARROW)  &kp LCTRL            &trans     &kp DEL       &mkp MB4  &mkp MB5                                     &trans
            >;

            sensor-bindings = <&new_behavior2>;
        };

        mouse {
            bindings = <
&kp Q         &kp W         &kp E            &kp R      &kp T                                        &kp Y      &kp U     &kp I      &kp O     &kp P
&kp A         &lt 5 S       &kp D            &mkp MB1   &kp G        &none              &none        &kp H      &mkp MB1  &kp K      &mkp MB2  &mt LEFT_CONTROL MINUS
&kp Z         &kp X         &kp C            &kp V      &kp B        &none              &none        &kp N      &kp M     &kp COMMA  &kp DOT   &kp LEFT_ALT
&kp LEFT_WIN  &kp QUESTION  &kp EXCLAMATION  &kp LCTRL  &lt 1 SPACE  &kp BACKSPACE      &lt 1 SPACE  &kp ENTER                                 &mo 5
            >;

            sensor-bindings = <&new_behavior4>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &kp LS(LG(T))                          &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans         &trans      &kp DELETE  &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans         &trans      &trans      &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans         &trans      &kp LC(X)   &kp LC(Y)                          &trans
            >;

            sensor-bindings = <&new_behavior4>;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp N7  &kp N8  &kp N9   &kp MINUS                                     &trans  &trans  &trans  &trans  &trans
&kp PERCENT                 &kp N4  &kp N5  &kp N6   &kp COLON          &kp LG(TAB)        &trans  &trans  &trans  &trans  &trans  &kp LCTRL
&mt LEFT_SHIFT KP_NUMBER_0  &kp N1  &kp N2  &kp N3   &kp UNDER          &kp SLASH          &trans  &trans  &trans  &trans  &trans  &kp LEFT_ALT
&trans                      &trans  &trans  &kp F10  &mt LEFT_SHIFT N0  &kp BACKSPACE      &trans  &trans                          &trans
            >;

            sensor-bindings = <&new_behavior3>;
        };

        func {
            bindings = <
&kp MINUS                   &kp N7  &kp N8  &kp N9   &kp MINUS                           &kp F1   &kp F7  &kp F8  &kp F9  &kp F10
&kp PERCENT                 &kp N4  &kp N5  &kp N6   &kp COLON  &kp LG(TAB)      &trans  &kp F6   &kp F4  &kp F5  &kp F6  &kp F11
&mt LEFT_SHIFT KP_NUMBER_0  &kp N1  &kp N2  &kp N3   &kp UNDER  &kp SLASH        &trans  &kp F11  &kp F1  &kp F2  &kp F3  &kp F12
&trans                      &trans  &trans  &kp F10  &kp N0     &double0         &trans  &trans                           &trans
            >;

            sensor-bindings = <&new_behavior>;
        };

        ble {
            bindings = <
&trans  &kp LG(NUMBER_7)  &kp LG(NUMBER_8)  &kp LG(NUMBER_9)  &trans                               &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)  &kp LG(NUMBER_6)  &trans  &trans      &trans           &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &trans  &trans      &kp RA(LC(DEL))  &trans        &trans        &trans        &trans        &trans
&trans  &trans            &trans            &trans            &trans  &trans      &trans           &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        apply {
            bindings = <
&trans  &kp LS(LA(LC(N7)))  &kp LS(LA(LC(N8)))  &kp LS(LA(LC(N9)))  &trans                      &trans  &kp LS(LA(LC(F7)))  &kp LS(LA(LC(F8)))  &kp LS(LA(LC(F9)))  &trans
&trans  &kp LS(LA(LC(N4)))  &kp LS(LA(LC(N5)))  &kp LS(LA(LC(N6)))  &trans  &trans      &trans  &trans  &kp LS(LA(LC(F4)))  &kp LS(LA(LC(F5)))  &kp LS(LA(LC(F6)))  &trans
&trans  &kp LS(LC(LA(N1)))  &kp LS(LA(LC(N2)))  &kp LS(LA(LC(N3)))  &trans  &trans      &trans  &trans  &kp LS(LA(LC(F1)))  &kp LS(LA(LC(F2)))  &kp LS(LA(LC(F3)))  &trans
&trans  &trans              &trans              &trans              &trans  &trans      &trans  &trans                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LS(LA(RC(UP_ARROW))) LS(LA(LC(DOWN)))>;
        };
    };
};
