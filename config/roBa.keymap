#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

/ {
    combos {
        compatible = "zmk,combos";

        LEFT_PARENTHESISC {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <18 19 12>;
        };

        RIGHT_PARENTHESISC {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 13 18>;
        };

        RIGHT_BRACKETc {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <19 18 11>;
        };

        LEFT_BRACKETc {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <19 18 10>;
        };

        LEFT_BRACEx {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <19 18 14>;
        };

        RIGHT_BRACEx {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <19 18 15>;
        };

        AT_SIGNc {
            bindings = <&kp AT_SIGN>;
            key-positions = <18 30>;
        };

        QUESTIONc {
            bindings = <&kp QUESTION>;
            key-positions = <13 25>;
        };

        EXCLAMATIONc {
            bindings = <&kp EXCLAMATION>;
            key-positions = <14 26>;
        };

        UNDERSCOREc {
            bindings = <&kp UNDERSCORE>;
            key-positions = <31 32>;
        };

        SINGLE_QUOTEc {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <3 13>;
        };

        DOUBLE_QUOTESc {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <4 14>;
        };

        PLUSc {
            bindings = <&kp PLUS>;
            key-positions = <13 12 18>;
        };

        MINUSc {
            bindings = <&kp MINUS>;
            key-positions = <13 12 19>;
        };

        ASTERISKc {
            bindings = <&kp ASTERISK>;
            key-positions = <13 12 20>;
        };

        EQUALc {
            bindings = <&kp EQUAL>;
            key-positions = <13 12 21>;
        };

        COLONc {
            bindings = <&kp COLON>;
            key-positions = <19 20 13>;
        };

        SEMICOLONc {
            bindings = <&kp SEMICOLON>;
            key-positions = <19 20 12>;
        };

        PIPE2c {
            bindings = <&kp PIPE2>;
            key-positions = <19 20 15>;
        };

        BACKSLASHc {
            bindings = <&kp BACKSLASH>;
            key-positions = <19 20 14>;
        };

        GREATER_THANc {
            bindings = <&kp GREATER_THAN>;
            key-positions = <19 18 25>;
        };

        LESS_THANc {
            bindings = <&kp LESS_THAN>;
            key-positions = <19 18 24>;
        };

        PERCENTc {
            bindings = <&kp PERCENT>;
            key-positions = <13 12 32>;
        };

        SLASHxx {
            bindings = <&kp SLASH>;
            key-positions = <13 12 31>;
        };

        GRAVEc {
            bindings = <&kp GRAVE>;
            key-positions = <11 12 18>;
        };

        TILDEcc {
            bindings = <&kp TILDE>;
            key-positions = <11 12 19>;
        };

        NON_US_HASHc {
            bindings = <&kp NON_US_HASH>;
            key-positions = <11 12 20>;
        };

        DOLLARxx {
            bindings = <&kp DOLLAR>;
            key-positions = <11 12 21>;
        };

        AMPERSANDc {
            bindings = <&kp AMPERSAND>;
            key-positions = <11 12 7>;
        };

        CARETc {
            bindings = <&kp CARET>;
            key-positions = <11 12 8>;
        };

        UP_ARROWc {
            bindings = <&kp UP_ARROW>;
            key-positions = <19 12>;
        };

        DOWN_ARROWc {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <24 31>;
        };

        LEFT_ARROWx {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <18 11>;
        };

        RIGHT_ARROWc {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <20 13>;
        };

        PRINTSCREENc {
            bindings = <&kp LS(LG(S))>;
            key-positions = <28 27>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <15 16>;
        };

        wintab {
            bindings = <&kp LG(TAB)>;
            key-positions = <13 12 18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W      &kp E         &kp R           &kp T                                &kp Y          &kp U    &kp I      &kp O    &kp P
&kp A             &lt 1 S    &kp D         &lt 4 F         &kp G    &kp LANG2        &kp LANG1  &kp H          &lt 2 J  &lt 5 K    &lt 3 L  &kp MINUS
&kp Z             &kp X      &kp C         &kp V           &kp B    &kp LS(TAB)      &kp TAB    &kp N          &kp M    &kp COMMA  &kp DOT  &kp LEFT_ALT
&kp LEFT_CONTROL  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_SHIFT  &lt 2 B  &kp SPACE        &kp ENTER  &kp BACKSPACE                               &kp PRINTSCREEN
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans          &trans          &trans           &trans                               &kp F1     &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans          &kp UP_ARROW    &trans           &trans     &trans         &kp F13    &kp F6     &kp F7  &kp F8  &kp F9  &kp F10
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &trans         &trans     &trans     &trans  &trans  &trans  &kp F11
&trans  &trans          &trans          &kp LC(X)        &kp LC(C)  &kp LC(V)      &kp LC(Z)  &kp LC(Y)                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                      &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK     &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD       &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &kp F10          &kp KP_NUMBER_0  &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp UP_ARROW    &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &kp DOWN_ARROW  &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
